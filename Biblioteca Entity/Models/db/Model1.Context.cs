//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biblioteca_Entity.Models.db
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BibliotecaEntities : DbContext
    {
        public BibliotecaEntities()
            : base("name=BibliotecaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumnos> Alumnos { get; set; }
        public virtual DbSet<autores> autores { get; set; }
        public virtual DbSet<Carreras> Carreras { get; set; }
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<DetallesLibros> DetallesLibros { get; set; }
        public virtual DbSet<Editoriales> Editoriales { get; set; }
        public virtual DbSet<Idiomas> Idiomas { get; set; }
        public virtual DbSet<Libros> Libros { get; set; }
        public virtual DbSet<Paises> Paises { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Libros_Alumnos> Libros_Alumnos { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Alumnos_Eliminar(Nullable<int> idDni)
        {
            var idDniParameter = idDni.HasValue ?
                new ObjectParameter("IdDni", idDni) :
                new ObjectParameter("IdDni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Alumnos_Eliminar", idDniParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Alumnos_Insertar(string nombre, string apellido, Nullable<int> edad, string direccion, Nullable<System.DateTime> localidad, Nullable<System.DateTime> fechaDeNacimiento, Nullable<int> telefono, string email)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var localidadParameter = localidad.HasValue ?
                new ObjectParameter("localidad", localidad) :
                new ObjectParameter("localidad", typeof(System.DateTime));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("fechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("fechaDeNacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Alumnos_Insertar", nombreParameter, apellidoParameter, edadParameter, direccionParameter, localidadParameter, fechaDeNacimientoParameter, telefonoParameter, emailParameter);
        }
    
        public virtual ObjectResult<SP_Alumnos_Listar_Result> SP_Alumnos_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Alumnos_Listar_Result>("SP_Alumnos_Listar");
        }
    
        public virtual int SP_Alumnos_Modificar(Nullable<int> id_dni, string nombre, string apellido, Nullable<int> edad, string direccion, string localidad, Nullable<System.DateTime> fechaDeNacimiento, Nullable<int> telefono, string email)
        {
            var id_dniParameter = id_dni.HasValue ?
                new ObjectParameter("Id_dni", id_dni) :
                new ObjectParameter("Id_dni", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var localidadParameter = localidad != null ?
                new ObjectParameter("localidad", localidad) :
                new ObjectParameter("localidad", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("fechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("fechaDeNacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Alumnos_Modificar", id_dniParameter, nombreParameter, apellidoParameter, edadParameter, direccionParameter, localidadParameter, fechaDeNacimientoParameter, telefonoParameter, emailParameter);
        }
    
        public virtual ObjectResult<SP_Alumnos_ObtenerPorId_Result> SP_Alumnos_ObtenerPorId(Nullable<int> id_dni)
        {
            var id_dniParameter = id_dni.HasValue ?
                new ObjectParameter("id_dni", id_dni) :
                new ObjectParameter("id_dni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Alumnos_ObtenerPorId_Result>("SP_Alumnos_ObtenerPorId", id_dniParameter);
        }
    
        public virtual int SP_Autores_Eliminar(Nullable<int> idAutores)
        {
            var idAutoresParameter = idAutores.HasValue ?
                new ObjectParameter("IdAutores", idAutores) :
                new ObjectParameter("IdAutores", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Autores_Eliminar", idAutoresParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Autores_Insertar(string nombre, string apellido, Nullable<System.DateTime> fechaDeNacimiento, Nullable<int> id_pais, string email)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("fechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("fechaDeNacimiento", typeof(System.DateTime));
    
            var id_paisParameter = id_pais.HasValue ?
                new ObjectParameter("id_pais", id_pais) :
                new ObjectParameter("id_pais", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Autores_Insertar", nombreParameter, apellidoParameter, fechaDeNacimientoParameter, id_paisParameter, emailParameter);
        }
    
        public virtual ObjectResult<SP_Autores_Listar_Result> SP_Autores_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Autores_Listar_Result>("SP_Autores_Listar");
        }
    
        public virtual int SP_Autores_Modificar(Nullable<int> id_autor, Nullable<int> id_pais, string nombre, string apellido, Nullable<System.DateTime> fechaDeNacimiento, string email)
        {
            var id_autorParameter = id_autor.HasValue ?
                new ObjectParameter("Id_autor", id_autor) :
                new ObjectParameter("Id_autor", typeof(int));
    
            var id_paisParameter = id_pais.HasValue ?
                new ObjectParameter("Id_pais", id_pais) :
                new ObjectParameter("Id_pais", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("fechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("fechaDeNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Autores_Modificar", id_autorParameter, id_paisParameter, nombreParameter, apellidoParameter, fechaDeNacimientoParameter, emailParameter);
        }
    
        public virtual int SP_Carreras_Eliminar(Nullable<int> id_Carreras)
        {
            var id_CarrerasParameter = id_Carreras.HasValue ?
                new ObjectParameter("Id_Carreras", id_Carreras) :
                new ObjectParameter("Id_Carreras", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Carreras_Eliminar", id_CarrerasParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Carreras_Insertar(string nombre, Nullable<int> duracion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Carreras_Insertar", nombreParameter, duracionParameter);
        }
    
        public virtual ObjectResult<SP_Carreras_Listar_Result> SP_Carreras_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Carreras_Listar_Result>("SP_Carreras_Listar");
        }
    
        public virtual int SP_Carreras_Modificar(Nullable<int> id_carreras, string nombre, Nullable<int> duracion)
        {
            var id_carrerasParameter = id_carreras.HasValue ?
                new ObjectParameter("Id_carreras", id_carreras) :
                new ObjectParameter("Id_carreras", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Carreras_Modificar", id_carrerasParameter, nombreParameter, duracionParameter);
        }
    
        public virtual int SP_Categorias_Eliminar(Nullable<int> id_Categorias)
        {
            var id_CategoriasParameter = id_Categorias.HasValue ?
                new ObjectParameter("Id_Categorias", id_Categorias) :
                new ObjectParameter("Id_Categorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Categorias_Eliminar", id_CategoriasParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Categorias_Insertar(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Categorias_Insertar", descripcionParameter);
        }
    
        public virtual ObjectResult<SP_Categorias_Listar_Result> SP_Categorias_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Categorias_Listar_Result>("SP_Categorias_Listar");
        }
    
        public virtual int SP_Categorias_Modificar(Nullable<int> id_categorias, string descripcion)
        {
            var id_categoriasParameter = id_categorias.HasValue ?
                new ObjectParameter("Id_categorias", id_categorias) :
                new ObjectParameter("Id_categorias", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Categorias_Modificar", id_categoriasParameter, descripcionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Editoriales_Eliminar(Nullable<int> idEditorial)
        {
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Editoriales_Eliminar", idEditorialParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Editoriales_Insertar(string nombre, string direccion, string id_Pais, Nullable<int> telefono, string email)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var id_PaisParameter = id_Pais != null ?
                new ObjectParameter("Id_Pais", id_Pais) :
                new ObjectParameter("Id_Pais", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Editoriales_Insertar", nombreParameter, direccionParameter, id_PaisParameter, telefonoParameter, emailParameter);
        }
    
        public virtual ObjectResult<SP_Editoriales_Listar_Result> SP_Editoriales_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Editoriales_Listar_Result>("SP_Editoriales_Listar");
        }
    
        public virtual int SP_Editoriales_Modificar(Nullable<int> id_Editorial, string nombre, string direccion, Nullable<int> id_Pais, string email, Nullable<int> telefono)
        {
            var id_EditorialParameter = id_Editorial.HasValue ?
                new ObjectParameter("Id_Editorial", id_Editorial) :
                new ObjectParameter("Id_Editorial", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var id_PaisParameter = id_Pais.HasValue ?
                new ObjectParameter("Id_Pais", id_Pais) :
                new ObjectParameter("Id_Pais", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Editoriales_Modificar", id_EditorialParameter, nombreParameter, direccionParameter, id_PaisParameter, emailParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Idiomas_Eliminar(Nullable<int> idIdiomas)
        {
            var idIdiomasParameter = idIdiomas.HasValue ?
                new ObjectParameter("IdIdiomas", idIdiomas) :
                new ObjectParameter("IdIdiomas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Idiomas_Eliminar", idIdiomasParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Idiomas_Insertar(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Idiomas_Insertar", descripcionParameter);
        }
    
        public virtual ObjectResult<SP_Idiomas_Listar_Result> SP_Idiomas_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Idiomas_Listar_Result>("SP_Idiomas_Listar");
        }
    
        public virtual int SP_Idiomas_Modificar(Nullable<int> id_idiomas, string descripcion)
        {
            var id_idiomasParameter = id_idiomas.HasValue ?
                new ObjectParameter("Id_idiomas", id_idiomas) :
                new ObjectParameter("Id_idiomas", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Idiomas_Modificar", id_idiomasParameter, descripcionParameter);
        }
    
        public virtual int SP_Libros_Eliminar(Nullable<int> id_isbn)
        {
            var id_isbnParameter = id_isbn.HasValue ?
                new ObjectParameter("Id_isbn", id_isbn) :
                new ObjectParameter("Id_isbn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Libros_Eliminar", id_isbnParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Libros_Insertar(Nullable<int> id_autor, Nullable<int> id_editorial, Nullable<int> id_categoria, Nullable<int> id_idioma, string titulo, Nullable<int> stock, Nullable<System.DateTime> fecha_publicacion)
        {
            var id_autorParameter = id_autor.HasValue ?
                new ObjectParameter("Id_autor", id_autor) :
                new ObjectParameter("Id_autor", typeof(int));
    
            var id_editorialParameter = id_editorial.HasValue ?
                new ObjectParameter("Id_editorial", id_editorial) :
                new ObjectParameter("Id_editorial", typeof(int));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("Id_categoria", id_categoria) :
                new ObjectParameter("Id_categoria", typeof(int));
    
            var id_idiomaParameter = id_idioma.HasValue ?
                new ObjectParameter("Id_idioma", id_idioma) :
                new ObjectParameter("Id_idioma", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var fecha_publicacionParameter = fecha_publicacion.HasValue ?
                new ObjectParameter("fecha_publicacion", fecha_publicacion) :
                new ObjectParameter("fecha_publicacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Libros_Insertar", id_autorParameter, id_editorialParameter, id_categoriaParameter, id_idiomaParameter, tituloParameter, stockParameter, fecha_publicacionParameter);
        }
    
        public virtual ObjectResult<SP_Libros_Listar_Result> SP_Libros_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Libros_Listar_Result>("SP_Libros_Listar");
        }
    
        public virtual int SP_Libros_Modificar(Nullable<int> id_isbn, Nullable<int> id_autor, Nullable<int> id_editorial, Nullable<int> id_categoria, Nullable<int> id_idioma, string titulo, Nullable<int> stock, Nullable<System.DateTime> fecha_publicacion)
        {
            var id_isbnParameter = id_isbn.HasValue ?
                new ObjectParameter("Id_isbn", id_isbn) :
                new ObjectParameter("Id_isbn", typeof(int));
    
            var id_autorParameter = id_autor.HasValue ?
                new ObjectParameter("Id_autor", id_autor) :
                new ObjectParameter("Id_autor", typeof(int));
    
            var id_editorialParameter = id_editorial.HasValue ?
                new ObjectParameter("Id_editorial", id_editorial) :
                new ObjectParameter("Id_editorial", typeof(int));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("Id_categoria", id_categoria) :
                new ObjectParameter("Id_categoria", typeof(int));
    
            var id_idiomaParameter = id_idioma.HasValue ?
                new ObjectParameter("Id_idioma", id_idioma) :
                new ObjectParameter("Id_idioma", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var fecha_publicacionParameter = fecha_publicacion.HasValue ?
                new ObjectParameter("fecha_publicacion", fecha_publicacion) :
                new ObjectParameter("fecha_publicacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Libros_Modificar", id_isbnParameter, id_autorParameter, id_editorialParameter, id_categoriaParameter, id_idiomaParameter, tituloParameter, stockParameter, fecha_publicacionParameter);
        }
    
        public virtual int SP_Paises_Eliminar(Nullable<int> idPais)
        {
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Paises_Eliminar", idPaisParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Paises_Insertar(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Paises_Insertar", nombreParameter);
        }
    
        public virtual ObjectResult<SP_Paises_Listar_Result> SP_Paises_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Paises_Listar_Result>("SP_Paises_Listar");
        }
    
        public virtual int SP_Paises_Modificar(Nullable<int> id_Pais, string nombre)
        {
            var id_PaisParameter = id_Pais.HasValue ?
                new ObjectParameter("Id_Pais", id_Pais) :
                new ObjectParameter("Id_Pais", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Paises_Modificar", id_PaisParameter, nombreParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
